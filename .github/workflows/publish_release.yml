name: Publish to PyPI and GitHub

on:
  workflow_dispatch:
    inputs:
      server_change_type:
        description: 'Server/API change type, this will be used to generate the client SDK'
        required: false
        default: 'none'
        type: choice
        options:
          - none
          - patch
          - minor
          - major
      change_description:
        description: 'Description of server/API changes (optional), this will be used to generate the client SDK'
        required: false
        type: string
  push:
    tags:
      - "v*"                       # core package tags
      - "*@v*"                    # package-scoped tags like package@v1.2.3

jobs:
  build-n-publish:
    name: Build and publish to PyPI
    if: github.repository == 'run-llama/workflows-py'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        package: [llama-index-workflows, llama-index-utils-workflow]
        include:
          - package: llama-index-workflows
            is_core: true
          - package: llama-index-utils-workflow
            is_core: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for tag comparison

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Parse tag
        id: tag
        run: |
          REF_NAME="${GITHUB_REF_NAME}"
          if [[ "${REF_NAME}" == v* ]]; then
            PKG="llama-index-workflows"
            VERSION="${REF_NAME#v}"
          else
            # strip optional leading '@'
            REF_TRIMMED="${REF_NAME#@}"
            PKG_PART="${REF_TRIMMED%@v*}"
            PKG="${PKG_PART}"
            VERSION_PART="${REF_TRIMMED#*@v}"
            VERSION="${VERSION_PART}"
          fi
          echo "package=${PKG}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Compute directory flag
        id: dir
        run: |
          if [ "${{ matrix.is_core }}" = "true" ]; then
            echo "dir_flag=" >> $GITHUB_OUTPUT
          else
            echo "dir_flag=--directory packages/${{ matrix.package }}" >> $GITHUB_OUTPUT
          fi

      - name: Guard non-target matrix entry
        if: steps.tag.outputs.package != matrix.package
        run: echo "Skipping matrix package ${{ matrix.package }} for tag ${{ steps.tag.outputs.package }}" && exit 0

      - name: Validate version (core only)
        if: startsWith(github.ref, 'refs/tags/') && matrix.is_core == true
        run: uv run python scripts/validate_version.py

      - name: Set version output
        id: version
        run: |
          VERSION=$(uv run ${{ steps.dir.outputs.dir_flag }} python -c "from importlib.metadata import version; print(version('${{ matrix.package }}'))")
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and publish
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv build ${{ steps.dir.outputs.dir_flag }}
          uv publish ${{ steps.dir.outputs.dir_flag }}

      - name: Generate OpenAPI spec (core only)
        if: matrix.is_core == true
        run: |
          uv sync --all-extras
          uv run hatch run server:openapi

      - name: Create GitHub Release (core only)
        if: matrix.is_core == true
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*,openapi.json"
          generateReleaseNotes: true

      - name: Detect change type for tags (core only)
        id: detect_change
        if: startsWith(github.ref, 'refs/tags/') && matrix.is_core == true
        run: uv run python scripts/detect_change_type.py

      - name: Set SDK trigger parameters
        id: sdk_params
        if: matrix.is_core == true
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "change_type=${{ github.event.inputs.server_change_type }}" >> $GITHUB_OUTPUT
            echo "change_description=${{ github.event.inputs.change_description }}" >> $GITHUB_OUTPUT
          else
            echo "change_type=${{ steps.detect_change.outputs.change_type }}" >> $GITHUB_OUTPUT
            echo "change_description=" >> $GITHUB_OUTPUT
          fi

      - name: Generate GitHub App Token
        id: app-token
        if: matrix.is_core == true
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.CI_BOT_APP_ID }}
          private-key: ${{ secrets.CI_BOT_PRIVATE_KEY }}
          owner: run-llama

      - name: Trigger SDK Update
        if: matrix.is_core == true && steps.sdk_params.outputs.change_type != 'none' && steps.sdk_params.outputs.change_type != ''
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.app-token.outputs.token }}
          repository: run-llama/llama-ui
          event-type: workflows-sdk-update
          client-payload: '{"version": "${{ steps.version.outputs.version }}", "openapi_url": "https://github.com/run-llama/workflows-py/releases/download/v${{ steps.version.outputs.version }}/openapi.json", "change_type": "${{ steps.sdk_params.outputs.change_type }}", "change_description": "${{ steps.sdk_params.outputs.change_description }}"}'
