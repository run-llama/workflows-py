name: Publish to PyPI and GitHub

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-n-publish:
    name: Build and publish to PyPI
    if: github.repository == 'run-llama/workflows-py'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Validate version
        if: startsWith(github.ref, 'refs/tags/')
        run: python scripts/validate_version.py
      
      - name: Set version output
        id: version
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "version=$(grep '^version' pyproject.toml | cut -d'"' -f2)" >> $GITHUB_OUTPUT

      - name: Build and publish
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv build
          uv publish

      - name: Generate OpenAPI spec
        run: |
          uv sync --extra server
          uv run python -m workflows.server.server --output openapi.json

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*,openapi.json"
          generateReleaseNotes: true

      - name: Trigger SDK Update
        if: startsWith(github.ref, 'refs/tags/')
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.LLAMA_UI_DISPATCH_TOKEN }}
          repository: run-llama/llama-ui
          event-type: workflows-sdk-update
          client-payload: '{"version": "${{ steps.version.outputs.version }}", "openapi_url": "https://github.com/run-llama/workflows-py/releases/download/v${{ steps.version.outputs.version }}/openapi.json"}'